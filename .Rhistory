#loading libraries
library(dplyr)
#loading the dataset
trade <- read.csv("Raw Data.csv")
#loading libraries
library(dplyr)
#loading the dataset
trade <- read.csv("Raw Data.csv")
#View dataset
View(trade) #there are zeros in Weight and Quantity columns
#make a copy and work on the copy
business <- trade
#loading libraries
library(dplyr)
#loading the dataset
trade <- read.csv("Raw Data.csv")
#View dataset
View(trade) #there are zeros in Weight and Quantity columns
#make a copy and work on the copy
business <- trade
#loading libraries
library(dplyr)
#loading the dataset
trade <- read.csv("Raw Data.csv")
#View dataset
View(trade) #there are zeros in Weight and Quantity columns
#make a copy and work on the copy
business <- trade
#Modify names of columns for clarity
names(business) <- c("Country", "Year", "Commoditycode", "Commodity", "Flow",
"Dollars", "Weight", "Quantityname", "Quantity", "Category"
#structure of data
str(business)
#summary of data
summary(business) #Missing values present in Weight and Quantity
#loading libraries
library(dplyr)
#loading the dataset
trade <- read.csv("Raw Data.csv")
#View dataset
View(trade) #there are zeros in Weight and Quantity columns
#make a copy and work on the copy
business <- trade
#Modify names of columns for clarity
names(business) <- c("Country", "Year", "Commoditycode", "Commodity", "Flow",
"Dollars", "Weight", "Quantityname", "Quantity", "Category")
#structure of data
str(business)
#summary of data
summary(business) #Missing values present in Weight and Quantity
#There is a "No Quantity" value in Quantity name
#No Quantity indicates Quantity is either 0 or NA
#Approach 1: Eliminate all missing values
trader <-  na.omit(trade)#if missing values are eliminated, we have 58058 obs.
#Approach 1: Eliminate all missing values
trader <-  na.omit(trade)#if missing values are eliminated, we have 58058 obs.
#When Weight is zero and Quantity is also zero, output is 1 else 0
business$zeroWQ <- ifelse(business$Weight < 1 & business$Quantity < 1, "1", "0")
table(business$zeroWQ)# there are 847 rows that account to this scenario
business$zeroWQ <-NULL
library(tidyverse)
library(tidyverse)
library(tidyverse)
install.packages(tidyverse)
install.packages("tidyverse")
library(tidyverse)
travel <- read.csv('TravelInsu.csv')
library(tidyverse)
setwd("E:/Space/project/archive")
library(tidyverse)
setwd("E:/Space/project/archive")
travel <- read.csv('TravelInsu.csv')
travel
setwd("E:/Space/project/archive")
travel <- read.csv('TravelInsu.csv')
head(travel, 3)
model1 = lm(AnnualIncome ~ TravelInsurance, data = travel)
model1
summary(model1)
#Getting model1 summary
summary(model1)
#building model to analyze travel insurance based on people's annual income
model2 = lm(GraduateOrNot ~ TravelInsurance, data = travel)
library(tidyverse)
setwd("E:/Space/project/archive")
travel <- read.csv('TravelInsu.csv')
head(travel, 3)
#building model to analyze travel insurance based on people's annual income
model1 = lm(AnnualIncome ~ TravelInsurance, data = travel)
model1
#Getting model1 summary
summary(model1)
#building model to analyze travel insurance based on people's annual income
model2 = lm(GraduateOrNot ~ TravelInsurance, data = travel)
model2 = lm(GraduateOrNot ~ TravelInsurance, data = travel)
model1 = lm(AnnualIncome ~ TravelInsurance, data = travel)
model1
model2 = lm(GraduateOrNot ~ TravelInsurance, data = travel)
library(tidyverse)
setwd("E:/Space/project/archive")
travel <- read.csv('TravelInsu.csv')
head(travel, 3)
#building model to analyze travel insurance based on people's annual income
model2 = lm(FamilyMembers ~ TravelInsurance, data = travel)
library(tidyverse)
setwd("E:/Space/project/archive")
travel <- read.csv('TravelInsu.csv')
head(travel, 3)
#building model to analyze travel insurance based on people's annual income
model1 = lm(AnnualIncome ~ TravelInsurance, data = travel)
model1
#Getting model1 summary
summary(model1)
#building model to analyze travel insurance based on people's annual income
model2 = lm(FamilyMembers ~ TravelInsurance, data = travel)
model2
#building model to analyze travel insurance based on people's annual income
model1 = lm(AnnualIncome ~ TravelInsurance, data = travel)
model1
model2
#building another model to analyze travel insurance based on number of family members present in a family
model2 = lm(Age ~ TravelInsurance, data = travel)
model2 = lm(Age ~ TravelInsurance, data = travel)
model2
#getting model 2 summary
summary(model2)
ggplot(travelisnu, aes(x = AnnualIncome, color = TravelInsurance)) +
geom_histogram()
ggplot(travel, aes(x = AnnualIncome, color = TravelInsurance)) +
geom_histogram()
#building another model to analyze travel insurance based on number of family members present in a family
model2 = lm(GraduateOrNot  ~ TravelInsurance, data = travel)
#getting model 2 summary
summary(model2)
#ploting histogram to generalize and visual the the amount of travel insurenace based on annual income!
ggplot(travel, aes(x = GraduateOrNot, color = TravelInsurance)) +
geom_histogram()
rlang::last_trace()
#ploting histogram to generalize and visual the the amount of travel insurenace based on annual income!
ggplot(travel, aes(x = ChronicDiseases, color = TravelInsurance)) +
geom_histogram()
#ploting histogram to generalize and visual the the amount of travel insurenace based on annual income!
ggplot(travel, aes(x = EverTravelledAbroad, color = TravelInsurance)) +
geom_histogram()
model2 = lm(FamilyMembers  ~ TravelInsurance, data = travel)
model2
#ploting histogram to generalize and visual the the amount of travel insurenace based on annual income!
ggplot(travel, aes(x = FamilyMembers , color = TravelInsurance)) +
geom_histogram()
#ploting histogram to generalize and visual the the amount of travel insurenace based on annual income!
ggplot(travel, aes(x = AnnualIncome , color = TravelInsurance)) +
geom_histogram()
travel %>%
group_by(Employment Type) %>%
travel %>%
group_by(Employment Type) %>%
travel %>%
group_by(Employment.Type) %>%
summarise(mean(AnnualIncome))
#building model to analyze travel insurance based on people's annual income
model1 = lm(TravelInsurance ~ AnnualIncome, data = travel)
model1
#Getting model1 summary
summary(model1)
model3 = lm(TravelInsurance ~ GraduateOrNot + AnnualIncome, data = travel)
#Getting model1 summary
summary(model1)
model3 = lm(TravelInsurance ~ GraduateOrNot + AnnualIncome, data = travel)
model3
model3 = lm(TravelInsurance ~ GraduateOrNot + AnnualIncome, data = travel)
model3
summary(model3)
#building collaborate model to use if travel insurance affects int this
model3 = lm(TravelInsurance ~ GraduateOrNot + AnnualIncome, data = travel)
model3
summary(model3)
ggplot(travel, aes(x = AnnualIncome,  y = TravelInsurance), color =GraduateOrNot))+
#plotting histogram to generalize and visual the the amount of travel insurance based on annual income!
ggplot(travel, aes(x = AnnualIncome,  y = TravelInsurance, color =GraduateOrNot))+
geom_point()+
geom_smooth(method = "lm", se = FALSE)
plot(travel)
library(tidyverse)
setwd("E:/Space/project/archive")
travel <- read.csv('TravelInsu.csv')
head(travel, 3)
plot(travel)
#building model to analyze travel insurance based on people's annual income
model1 = lm(TravelInsurance ~ AnnualIncome, data = travel)
model1
#Getting model1 summary
summary(model1)
#plotting histogram to generalize and visual the the amount of travel insurenace based on annual income!
ggplot(travel, aes(x = AnnualIncome , color = TravelInsurance)) +
geom_histogram()
#building another model to analyze travel insurance based on number of family members present in a family
model2 = lm(TravelInsurance  ~ FamilyMembers, data = travel)
model2
#getting model 2 summary
summary(model2)
#building collaborate model to use if travel insurance affects int this
model3 = lm(TravelInsurance ~ GraduateOrNot + AnnualIncome, data = travel)
model3
summary(model3)
#plotting histogram to generalize and visual the the amount of travel insurance based on annual income!
ggplot(travel, aes(x = AnnualIncome,  y = TravelInsurance, color =GraduateOrNot))+
geom_point()+
geom_smooth(method = "lm", se = FALSE)
#Grouping data together to get insight from the specific columns
travel %>%
group_by(Employment.Type) %>%
summarise(mean(AnnualIncome))
#plotting histogram to generalize and visual the the amount of travel insurance based on annual income!
ggplot(travel, aes(x = AnnualIncome,  y = TravelInsurance, color =GraduateOrNot))+
geom_point()+
geom_smooth(method = "lm", se = FALSE)
#plotting histogram to generalize and visual the the amount of travel insurenace based on annual income!
ggplot(travel, aes(x = AnnualIncome , color = TravelInsurance)) +
geom_histogram()
library(tidyverse)
setwd("E:/Space/project/archive")
travel <- read.csv('TravelInsu.csv')
head(travel, 3)
#plotting histogram to generalize and visual the the amount of travel insurenace based on annual income!
ggplot(travel, aes(x = AnnualIncome , color = TravelInsurance)) +
geom_histogram()
ggplot(travel, aes(x = AnnualIncome, y = TravelInsurance)) +
geom_point() +
geom_smooth(method = 'lm')
ggplot(travel, aes(x = AnnualIncome, y = TravelInsurance, color ='Employment.Type' )) +
geom_point() +
geom_smooth(method = 'lm')
ggplot(travel, aes(x = AnnualIncome, y = TravelInsurance, color ='Employment.Type' )) +
geom_point() +
geom_smooth(method = 'lm') +
ggtitle("Insurance depending on people's annual income") +
theme(axis.text.x = element_text(angle = 0, hjust = 1),
axis.title = element_blank())
#plotting histogram to generalize and visual the the amount of travel insurance based on annual income!
ggplot(travel, aes(x = AnnualIncome,  y = TravelInsurance, color =GraduateOrNot))+
geom_point()+
geom_smooth(method = "lm", se = FALSE)
ggtitle("Insured or not depending on graduation") +
theme(axis.text.x = element_text(angle = 0, hjust = 1),
axis.title = element_blank())+
coord_flip()
# Bayesian project
# Bayesian Methods for Data Science (DATS 6450 - 11, Fall 2019)
# Data Science @ George Washington University
# Author: Hung Chun-Lin, Chen Chen, Liu siyang
# Reference:
# Some of the code is from the book by Professor John K. Kruschke
# Please find the reference to and website of the book below:
# Kruschke, J. K. (2014). Doing Bayesian Data Analysis: A Tutorial with R, JAGS, and Stan. 2nd Edition. Academic Press / Elsevier
# https://sites.google.com/site/doingbayesiandataanalysis/
source("CodeSource.R")
library(tidyverse)
setwd("E:/Space/project/archive")
travel <- read.csv('TravelInsu.csv')
head(travel, 3)
plot(travel)
#building model to analyze travel insurance based on people's annual income
model1 = lm(TravelInsurance ~ AnnualIncome, data = travel)
model1
#Getting model1 summary
summary(model1)
#plotting histogram to generalize and visual the the amount of travel insurenace based on annual income!
ggplot(travel, aes(x = AnnualIncome , color = TravelInsurance)) +
geom_histogram()
#building another model to analyze travel insurance based on number of family members present in a family
model2 = lm(TravelInsurance  ~ FamilyMembers, data = travel)
model2
#getting model 2 summary
summary(model2)
#building collaborate model to use if travel insurance affects int this
model3 = lm(TravelInsurance ~ GraduateOrNot + AnnualIncome, data = travel)
model3
#getting model 3 summary
summary(model3)
#plotting histogram to generalize and visual the the amount of travel insurance based on annual income!
ggplot(travel, aes(x = AnnualIncome,  y = TravelInsurance, color =GraduateOrNot))+
geom_point()+
geom_smooth(method = "lm", se = FALSE)
ggtitle("Insured or not depending on graduation") +
theme(axis.text.x = element_text(angle = 0, hjust = 1),
axis.title = element_blank())+
coord_flip()
#Grouping data together to get insight from the specific columns
travel %>%
group_by(Employment.Type) %>%
summarise(mean(AnnualIncome))
ggplot(travel, aes(x = AnnualIncome, y = TravelInsurance, color ='Employment.Type' )) +
geom_point() +
geom_smooth(method = 'lm') +
ggtitle("Insurance depending on people's annual income") +
theme(axis.text.x = element_text(angle = 0, hjust = 1),
axis.title = element_blank())
library(tidyverse)
setwd("E:/Space/project/archive")
travel <- read.csv('TravelInsu.csv')
head(travel, 3)
model4 = lm(FrequentFlyer  ~ TravelInsurance, data - travel)
#Grouping data together to get insight from the specific columns
travel %>%
group_by(Employment.Type) %>%
summarise(mean(AnnualIncome))
summary(model4)
model4 = lm(FrequentFlyer  ~ TravelInsurance, data = travel)
model4 = lm(FrequentFlyer  ~ TravelInsurance, data = travel)
model4 = lm(FrequentFlyer  ~ TravelInsurance, data = travel)
library(tidyverse)
setwd("E:/Space/project/archive")
travel <- read.csv('TravelInsu.csv')
head(travel, 3)
plot(travel)
#building model to analyze travel insurance based on people's annual income
model1 = lm(TravelInsurance ~ AnnualIncome, data = travel)
model1
#Getting model1 summary
summary(model1)
#plotting histogram to generalize and visual the the amount of travel insurenace based on annual income!
ggplot(travel, aes(x = AnnualIncome , color = TravelInsurance)) +
geom_histogram()
#building another model to analyze travel insurance based on number of family members present in a family
model2 = lm(TravelInsurance  ~ FamilyMembers, data = travel)
model2
#getting model 2 summary
summary(model2)
#building collaborate model to use if travel insurance affects int this
model3 = lm(TravelInsurance ~ GraduateOrNot + AnnualIncome, data = travel)
model3
#getting model 3 summary
summary(model3)
#plotting histogram to generalize and visual the the amount of travel insurance based on annual income!
ggplot(travel, aes(x = AnnualIncome,  y = TravelInsurance, color =GraduateOrNot))+
geom_point()+
geom_smooth(method = "lm", se = FALSE)
ggtitle("Insured or not depending on graduation") +
theme(axis.text.x = element_text(angle = 0, hjust = 1),
axis.title = element_blank())+
coord_flip()
#Grouping data together to get insight from the specific columns
travel %>%
group_by(Employment.Type) %>%
summarise(mean(AnnualIncome))
ggplot(travel, aes(x = AnnualIncome, y = TravelInsurance, color ='Employment.Type' )) +
geom_point() +
geom_smooth(method = 'lm') +
ggtitle("Insurance depending on people's annual income") +
theme(axis.text.x = element_text(angle = 0, hjust = 1),
axis.title = element_blank())
model4 = lm(FrequentFlyer  ~ TravelInsurance, data = travel)
model4 = lm(FrequentFlyer  ~ TravelInsurance, data = travel)
